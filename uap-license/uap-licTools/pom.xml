<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.hexing.uap</groupId>
		<artifactId>uap-license</artifactId>
		<version>2.0.0.0-DEV</version>
	</parent>
  <artifactId>uap-licTools</artifactId>
  <packaging>jar</packaging>

  <name>uap-licTools</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <build>
		<plugins>
			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.14</version>
				<executions>
					<execution>
						<!-- 混淆时刻，这里是打包的时候混淆 -->
						<phase>package</phase>
						<goals>
							<!-- 指定使用插件的混淆功能 -->
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<proguardVersion>6.0.3</proguardVersion>
					<!-- 是否将生成的PG文件安装部署 -->
					<attach>true</attach>
					<!-- 是否混淆 -->
					<obfuscate>true</obfuscate>
					<!-- 指定生成文件分类 -->
					<!-- <attachArtifactClassifier>pg</attachArtifactClassifier> -->
					<proguardInclude>${basedir}/proguard.conf</proguardInclude>
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
						<lib>${java.home}/lib/jce.jar</lib>
					</libs>
					<!-- 对什么东西进行加载，这里仅有classes成功，不可能对配置文件及JSP混淆吧 -->
					<injar>${project.build.finalName}.jar</injar>
					<outjar>${project.build.finalName}.jar</outjar>
					<!-- 输出目录 -->
					<outputDirectory>${project.build.directory}</outputDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>6.0.3</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>